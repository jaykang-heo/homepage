{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar get_loading_markup_1 = require(\"./get-loading-markup\");\n\nvar loading = get_loading_markup_1.default();\n\nvar getCdnMarkup = function (_a) {\n  var version = _a.version,\n      _b = _a.cdnUrl,\n      cdnUrl = _b === void 0 ? '//cdn.jsdelivr.net/npm/@apollographql' : _b,\n      faviconUrl = _a.faviconUrl;\n  return \"\\n    <link rel=\\\"stylesheet\\\" href=\\\"\" + cdnUrl + \"/graphql-playground-react\" + (version ? \"@\" + version : '') + \"/build/static/css/index.css\\\" />\\n    \" + (typeof faviconUrl === 'string' ? \"<link rel=\\\"shortcut icon\\\" href=\\\"\" + faviconUrl + \"\\\" />\" : '') + \"\\n    \" + (faviconUrl === undefined ? \"<link rel=\\\"shortcut icon\\\" href=\\\"\" + cdnUrl + \"/graphql-playground-react\" + (version ? \"@\" + version : '') + \"/build/favicon.png\\\" />\" : '') + \"\\n    <script src=\\\"\" + cdnUrl + \"/graphql-playground-react\" + (version ? \"@\" + version : '') + \"/build/static/js/middleware.js\\\"></script>\\n\";\n};\n\nfunction renderPlaygroundPage(options) {\n  var extendedOptions = __assign({}, options, {\n    canSaveConfig: false\n  }); // for compatibility\n\n\n  if (options.subscriptionsEndpoint) {\n    extendedOptions.subscriptionEndpoint = options.subscriptionsEndpoint;\n  }\n\n  if (options.config) {\n    extendedOptions.configString = JSON.stringify(options.config, null, 2);\n  }\n\n  if (!extendedOptions.endpoint && !extendedOptions.configString) {\n    /* tslint:disable-next-line */\n    console.warn(\"WARNING: You didn't provide an endpoint and don't have a .graphqlconfig. Make sure you have at least one of them.\");\n  }\n\n  return \"\\n  <!DOCTYPE html>\\n  <html>\\n  <head>\\n    <meta charset=utf-8 />\\n    <meta name=\\\"viewport\\\" content=\\\"user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui\\\">\\n    <link href=\\\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700|Source+Code+Pro:400,700\\\" rel=\\\"stylesheet\\\">\\n    <title>\" + (extendedOptions.title || 'GraphQL Playground') + \"</title>\\n    \" + (extendedOptions.env === 'react' || extendedOptions.env === 'electron' ? '' : getCdnMarkup(extendedOptions)) + \"\\n  </head>\\n  <body>\\n    <style type=\\\"text/css\\\">\\n      html {\\n        font-family: \\\"Open Sans\\\", sans-serif;\\n        overflow: hidden;\\n      }\\n  \\n      body {\\n        margin: 0;\\n        background: #172a3a;\\n      }\\n  \\n      .playgroundIn {\\n        -webkit-animation: playgroundIn 0.5s ease-out forwards;\\n        animation: playgroundIn 0.5s ease-out forwards;\\n      }\\n  \\n      @-webkit-keyframes playgroundIn {\\n        from {\\n          opacity: 0;\\n          -webkit-transform: translateY(10px);\\n          -ms-transform: translateY(10px);\\n          transform: translateY(10px);\\n        }\\n        to {\\n          opacity: 1;\\n          -webkit-transform: translateY(0);\\n          -ms-transform: translateY(0);\\n          transform: translateY(0);\\n        }\\n      }\\n  \\n      @keyframes playgroundIn {\\n        from {\\n          opacity: 0;\\n          -webkit-transform: translateY(10px);\\n          -ms-transform: translateY(10px);\\n          transform: translateY(10px);\\n        }\\n        to {\\n          opacity: 1;\\n          -webkit-transform: translateY(0);\\n          -ms-transform: translateY(0);\\n          transform: translateY(0);\\n        }\\n      }\\n    </style>\\n    \" + loading.container + \"\\n    <div id=\\\"root\\\" />\\n    <script type=\\\"text/javascript\\\">\\n      window.addEventListener('load', function (event) {\\n        \" + loading.script + \"\\n  \\n        const root = document.getElementById('root');\\n        root.classList.add('playgroundIn');\\n  \\n        GraphQLPlayground.init(root, \" + JSON.stringify(extendedOptions, null, 2) + \")\\n      })\\n    </script>\\n  </body>\\n  </html>\\n\";\n}\n\nexports.renderPlaygroundPage = renderPlaygroundPage;","map":{"version":3,"sources":["../src/render-playground-page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AA0EA,IAAM,OAAO,GAAG,oBAAA,CAAA,OAAA,EAAhB;;AAEA,IAAM,YAAY,GAAG,UAAC,EAAD,EAIpB;MAHC,OAAA,GAAA,EAAA,CAAA,O;MACA,EAAA,GAAA,EAAA,CAAA,M;MAAA,MAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,uCAAA,GAAA,E;MACA,UAAA,GAAA,EAAA,CAAA,U;AACI,SAAA,2CAC6B,MAD7B,GACmC,2BADnC,IAEJ,OAAO,GAAG,MAAI,OAAP,GAAmB,EAFtB,IAEwB,wCAFxB,IAKA,OAAO,UAAP,KAAsB,QAAtB,GACI,wCAAmC,UAAnC,GAA6C,OADjD,GAEI,EAPJ,IAOM,QAPN,IAUA,UAAU,KAAK,SAAf,GACI,wCAAmC,MAAnC,GAAyC,2BAAzC,IACE,OAAO,GAAG,MAAI,OAAP,GAAmB,EAD5B,IAC8B,yBAFlC,GAII,EAdJ,IAcM,sBAdN,GAgBa,MAhBb,GAgBmB,2BAhBnB,IAiBJ,OAAO,GAAG,MAAI,OAAP,GAAmB,EAjBtB,IAiBwB,8CAjBxB;AAmBL,CAvBD;;AAyBA,SAAA,oBAAA,CAAqC,OAArC,EAA+D;AAC7D,MAAM,eAAe,GAAA,QAAA,CAAA,EAAA,EAChB,OADgB,EACT;AACV,IAAA,aAAa,EAAE;AADL,GADS,CAArB,CAD6D,CAK7D;;;AACA,MAAK,OAAe,CAAC,qBAArB,EAA4C;AAC1C,IAAA,eAAe,CAAC,oBAAhB,GAAwC,OAAe,CAAC,qBAAxD;AACD;;AACD,MAAI,OAAO,CAAC,MAAZ,EAAoB;AAClB,IAAA,eAAe,CAAC,YAAhB,GAA+B,IAAI,CAAC,SAAL,CAAe,OAAO,CAAC,MAAvB,EAA+B,IAA/B,EAAqC,CAArC,CAA/B;AACD;;AACD,MAAI,CAAC,eAAe,CAAC,QAAjB,IAA6B,CAAC,eAAe,CAAC,YAAlD,EAAgE;AAC9D;AACA,IAAA,OAAO,CAAC,IAAR,CACE,mHADF;AAGD;;AAED,SAAO,wVAOI,eAAe,CAAC,KAAhB,IAAyB,oBAP7B,IAOiD,gBAPjD,IASH,eAAe,CAAC,GAAhB,KAAwB,OAAxB,IAAmC,eAAe,CAAC,GAAhB,KAAwB,UAA3D,GACI,EADJ,GAEI,YAAY,CAAC,eAAD,CAXb,IAW8B,8rCAX9B,GA6DH,OAAO,CAAC,SA7DL,GA6Dc,sIA7Dd,GAiEC,OAAO,CAAC,MAjET,GAiEe,qJAjEf,GAsE8B,IAAI,CAAC,SAAL,CAC7B,eAD6B,EAE7B,IAF6B,EAG7B,CAH6B,CAtE9B,GA0EA,oDA1EP;AAgFD;;AAnGD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_loading_markup_1 = require(\"./get-loading-markup\");\nvar loading = get_loading_markup_1.default();\nvar getCdnMarkup = function (_a) {\n    var version = _a.version, _b = _a.cdnUrl, cdnUrl = _b === void 0 ? '//cdn.jsdelivr.net/npm/@apollographql' : _b, faviconUrl = _a.faviconUrl;\n    return \"\\n    <link rel=\\\"stylesheet\\\" href=\\\"\" + cdnUrl + \"/graphql-playground-react\" + (version ? \"@\" + version : '') + \"/build/static/css/index.css\\\" />\\n    \" + (typeof faviconUrl === 'string'\n        ? \"<link rel=\\\"shortcut icon\\\" href=\\\"\" + faviconUrl + \"\\\" />\"\n        : '') + \"\\n    \" + (faviconUrl === undefined\n        ? \"<link rel=\\\"shortcut icon\\\" href=\\\"\" + cdnUrl + \"/graphql-playground-react\" + (version ? \"@\" + version : '') + \"/build/favicon.png\\\" />\"\n        : '') + \"\\n    <script src=\\\"\" + cdnUrl + \"/graphql-playground-react\" + (version ? \"@\" + version : '') + \"/build/static/js/middleware.js\\\"></script>\\n\";\n};\nfunction renderPlaygroundPage(options) {\n    var extendedOptions = __assign({}, options, { canSaveConfig: false });\n    // for compatibility\n    if (options.subscriptionsEndpoint) {\n        extendedOptions.subscriptionEndpoint = options.subscriptionsEndpoint;\n    }\n    if (options.config) {\n        extendedOptions.configString = JSON.stringify(options.config, null, 2);\n    }\n    if (!extendedOptions.endpoint && !extendedOptions.configString) {\n        /* tslint:disable-next-line */\n        console.warn(\"WARNING: You didn't provide an endpoint and don't have a .graphqlconfig. Make sure you have at least one of them.\");\n    }\n    return \"\\n  <!DOCTYPE html>\\n  <html>\\n  <head>\\n    <meta charset=utf-8 />\\n    <meta name=\\\"viewport\\\" content=\\\"user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui\\\">\\n    <link href=\\\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700|Source+Code+Pro:400,700\\\" rel=\\\"stylesheet\\\">\\n    <title>\" + (extendedOptions.title || 'GraphQL Playground') + \"</title>\\n    \" + (extendedOptions.env === 'react' || extendedOptions.env === 'electron'\n        ? ''\n        : getCdnMarkup(extendedOptions)) + \"\\n  </head>\\n  <body>\\n    <style type=\\\"text/css\\\">\\n      html {\\n        font-family: \\\"Open Sans\\\", sans-serif;\\n        overflow: hidden;\\n      }\\n  \\n      body {\\n        margin: 0;\\n        background: #172a3a;\\n      }\\n  \\n      .playgroundIn {\\n        -webkit-animation: playgroundIn 0.5s ease-out forwards;\\n        animation: playgroundIn 0.5s ease-out forwards;\\n      }\\n  \\n      @-webkit-keyframes playgroundIn {\\n        from {\\n          opacity: 0;\\n          -webkit-transform: translateY(10px);\\n          -ms-transform: translateY(10px);\\n          transform: translateY(10px);\\n        }\\n        to {\\n          opacity: 1;\\n          -webkit-transform: translateY(0);\\n          -ms-transform: translateY(0);\\n          transform: translateY(0);\\n        }\\n      }\\n  \\n      @keyframes playgroundIn {\\n        from {\\n          opacity: 0;\\n          -webkit-transform: translateY(10px);\\n          -ms-transform: translateY(10px);\\n          transform: translateY(10px);\\n        }\\n        to {\\n          opacity: 1;\\n          -webkit-transform: translateY(0);\\n          -ms-transform: translateY(0);\\n          transform: translateY(0);\\n        }\\n      }\\n    </style>\\n    \" + loading.container + \"\\n    <div id=\\\"root\\\" />\\n    <script type=\\\"text/javascript\\\">\\n      window.addEventListener('load', function (event) {\\n        \" + loading.script + \"\\n  \\n        const root = document.getElementById('root');\\n        root.classList.add('playgroundIn');\\n  \\n        GraphQLPlayground.init(root, \" + JSON.stringify(extendedOptions, null, 2) + \")\\n      })\\n    </script>\\n  </body>\\n  </html>\\n\";\n}\nexports.renderPlaygroundPage = renderPlaygroundPage;\n//# sourceMappingURL=render-playground-page.js.map"]},"metadata":{},"sourceType":"script"}