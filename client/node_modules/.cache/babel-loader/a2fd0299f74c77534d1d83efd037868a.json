{"ast":null,"code":"var _jsxFileName = \"/home/jay/Desktop/homepage/src/practiceCode/code.js\";\nimport React, { Component } from 'react';\nimport './code.css';\nvar code = false;\n\nfunction getAnswer() {}\n\nfunction startCoding() {\n  if (!code) {\n    document.getElementById('code').style.display = 'flex';\n    document.getElementById('submit').style.display = 'flex';\n    document.getElementById('startButton').style.display = 'none';\n  }\n}\n\nclass practiceCode extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"startButton\",\n      className: \"startButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => startCoding(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Start Coding\")), React.createElement(\"div\", {\n      className: \"code\",\n      id: \"code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"questionText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Two Number Sum\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \"Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), \"If any two numbers in the input array sum up to the target sum, the function should return them in an array. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), \"If no two numbers sum up to the target sum, the function should return an empty array. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), \"Assume that there will be at most one pair of numbers summing up to the target sum.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), \"Sample input: [3,5,-4,8,11,1,-1,6],10\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), \"Sample output: [-1.11]\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(\"textarea\", {\n      className: \"codeText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" Finish\"), React.createElement(\"button\", {\n      className: \"submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default practiceCode;","map":{"version":3,"sources":["/home/jay/Desktop/homepage/src/practiceCode/code.js"],"names":["React","Component","code","getAnswer","startCoding","document","getElementById","style","display","practiceCode","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AAEA,IAAIC,IAAI,GAAG,KAAX;;AAEA,SAASC,SAAT,GAAoB,CAEnB;;AAED,SAASC,WAAT,GAAsB;AAClB,MAAI,CAACF,IAAL,EAAU;AACNG,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsCC,OAAtC,GAA+C,MAA/C;AACAH,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,OAAxC,GAAiD,MAAjD;AACAH,IAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAAvC,CAA6CC,OAA7C,GAAuD,MAAvD;AACH;AACJ;;AAED,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AACjCS,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAIN,WAAW,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,EAAE,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlB,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,sHAGoH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHpH,mHAIiH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJjH,6FAK2F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL3F,yFAMuF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANvF,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,2CAQyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARzC,4BAS0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAT1B,CADJ,EAYI;AAAU,MAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CAJJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,EAAE,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,EAAE,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAnBJ,CADJ;AA2BC;;AA7B4B;;AAgCrC,eAAeK,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport './code.css';\n\nvar code = false\n\nfunction getAnswer(){\n\n}\n\nfunction startCoding(){\n    if (!code){\n        document.getElementById('code').style.display= 'flex'\n        document.getElementById('submit').style.display= 'flex'\n        document.getElementById('startButton').style.display = 'none'\n    }\n}\n\nclass practiceCode extends Component {\n    render(){\n        return (\n            <div>\n                <div id='startButton' className='startButton'>\n                    <button onClick={()=>startCoding()} >Start Coding</button>\n                </div>\n                <div className='code' id='code'>\n                    <label className='questionText'>\n                        Two Number Sum<br/>\n                        <br/>\n                        Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. <br/>\n                        If any two numbers in the input array sum up to the target sum, the function should return them in an array. <br/>\n                        If no two numbers sum up to the target sum, the function should return an empty array. <br/>\n                        Assume that there will be at most one pair of numbers summing up to the target sum.<br/>\n                        <br/>\n                        Sample input: [3,5,-4,8,11,1,-1,6],10<br/>\n                        Sample output: [-1.11]<br/>\n                    </label>\n                    <textarea className='codeText'>\n                    </textarea>\n                </div>\n                <div>\n                    <button className='submit' id='submit'> Finish</button>\n                    <button className='submit' id='submit'>Submit</button>\n                </div>\n            </div>\n            \n          );\n        }\n    }\n  \nexport default practiceCode;"]},"metadata":{},"sourceType":"module"}