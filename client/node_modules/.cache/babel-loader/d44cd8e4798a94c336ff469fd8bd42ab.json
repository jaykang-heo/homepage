{"ast":null,"code":"var _jsxFileName = \"/home/jay/Desktop/homepage/src/practiceCode/code.js\";\nimport React, { Component } from 'react';\nimport './code.css';\n\nfunction getAnswer() {}\n\nfunction getQuestion() {}\n\nvar start = '';\nvar end = '';\nvar code = false;\nvar total = '';\n\nfunction startCoding() {\n  if (!code) {\n    start = Date.now();\n    document.getElementById('wholeContent').style.visibility = 'visible';\n    document.getElementById('startButton').style.visibility = 'hidden';\n    document.getElementById('startButton').style.display = 'none';\n    code = true;\n  } else if (code) {\n    end = Date.now();\n    document.getElementById('wholeContent').style.visibility = 'hidden';\n    document.getElementById('startButton').style.visibility = 'visible';\n    document.getElementById('startButton').style.display = 'flex';\n    var time = end - start;\n    var result = 'You took ' + parseInt(time / 60) + ' seconds!';\n    document.getElementById('result').textContent = result;\n    code = false;\n  }\n}\n\nclass practiceCode extends Component {\n  render() {\n    var path = require('/home/jay/Desktop/homepage/src/practiceCode/code.json');\n\n    fetch(path).then(res => res.text()).then(data => {\n      console.log('data:', data);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"startButton\",\n      className: \"startButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => startCoding(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Start Coding\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      id: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"wholeContent\",\n      className: \"wholeContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"code\",\n      id: \"code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"questionText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Two Number Sum\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \"Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), \"If any two numbers in the input array sum up to the target sum, the function should return them in an array. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), \"If no two numbers sum up to the target sum, the function should return an empty array. \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), \"Assume that there will be at most one pair of numbers summing up to the target sum.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \"Sample input: [3,5,-4,8,11,1,-1,6],10\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Sample output: [-1.11]\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"textarea\", {\n      className: \"codeText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"function twoNumberSum(array, targetSum) \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => startCoding(),\n      className: \"submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Finish\"), React.createElement(\"button\", {\n      className: \"submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default practiceCode;","map":{"version":3,"sources":["/home/jay/Desktop/homepage/src/practiceCode/code.js"],"names":["React","Component","getAnswer","getQuestion","start","end","code","total","startCoding","Date","now","document","getElementById","style","visibility","display","time","result","parseInt","textContent","practiceCode","render","path","require","fetch","then","res","text","data","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './code.css';\n\n\nfunction getAnswer(){\n\n}\n\nfunction getQuestion(){\n}\n\nvar start = ''\nvar end = ''\nvar code = false\nvar total = ''\nfunction startCoding(){\n    if (!code){\n        start = Date.now()\n        document.getElementById('wholeContent').style.visibility = 'visible'\n        document.getElementById('startButton').style.visibility = 'hidden'\n        document.getElementById('startButton').style.display = 'none'\n        code = true\n    }\n    else if (code){\n        end = Date.now()\n        document.getElementById('wholeContent').style.visibility = 'hidden'\n        document.getElementById('startButton').style.visibility = 'visible'\n        document.getElementById('startButton').style.display = 'flex'\n        var time = end - start\n        var result = 'You took ' + parseInt(time/60) +' seconds!'\n        document.getElementById('result').textContent = result\n        code = false\n    }\n}\n\nclass practiceCode extends Component {\n    render(){\n        var path = require('/home/jay/Desktop/homepage/src/practiceCode/code.json')\n        fetch(path)\n        .then((res) => res.text())\n        .then((data) => {\n            console.log('data:', data);\n        }) \n        return (\n            <div>\n                <div id='startButton' className='startButton'>\n                    <button onClick={()=>startCoding()} >Start Coding</button><br/><br/>\n                    <label id='result'>\n\n                    </label>\n                </div>\n                <div id='wholeContent' className='wholeContent'>\n                    <div className='code' id='code'>\n                        <label className='questionText'>\n                            Two Number Sum<br/>\n                            <br/>\n                            Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. <br/>\n                            If any two numbers in the input array sum up to the target sum, the function should return them in an array. <br/>\n                            If no two numbers sum up to the target sum, the function should return an empty array. <br/>\n                            Assume that there will be at most one pair of numbers summing up to the target sum.<br/>\n                            <br/>\n                            Sample input: [3,5,-4,8,11,1,-1,6],10<br/>\n                            Sample output: [-1.11]<br/>\n                        </label>\n                        <textarea className='codeText'>\n                        function twoNumberSum(array, targetSum) {\n                        // Write your code here.\n                        }\n                        </textarea>\n                    </div>\n                    <div>\n                        <button onClick={()=>startCoding()} className='submit' id='submit'>Finish</button>\n                        <button className='submit' id='submit'>Submit</button>\n                    </div>\n                </div>\n            </div>\n          );\n        }\n    }\n  \nexport default practiceCode;"]},"metadata":{},"sourceType":"module"}