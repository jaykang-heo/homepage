{"ast":null,"code":"var _jsxFileName = \"/home/jay/Desktop/homepage/src/practiceCode/code.js\";\nimport React, { Component } from 'react';\nimport './code.css';\n\nfunction getAnswer() {}\n\nfunction startCoding() {}\n\nclass practiceCode extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"questionText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Two Number Subm Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. If any two numbers in the input array sum up to the target sum, the function should return them in an array. If no two numbers sum up to the target sum, the function should return an empty array. Assume that there will be at most one pair of numbers summing up to the target sum. Sample input: [3,5,-4,8,11,1,-1,6],10 Sample output: [-1.11]\"), React.createElement(\"textarea\", {\n      className: \"codeText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default practiceCode;","map":{"version":3,"sources":["/home/jay/Desktop/homepage/src/practiceCode/code.js"],"names":["React","Component","getAnswer","startCoding","practiceCode","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AAEA,SAASC,SAAT,GAAoB,CAEnB;;AAED,SAASC,WAAT,GAAsB,CAErB;;AAED,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8dADJ,EAYI;AAAU,MAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CAhBJ,CADJ;AAuBC;;AAzB4B;;AA4BrC,eAAeD,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport './code.css';\n\nfunction getAnswer(){\n\n}\n\nfunction startCoding(){\n    \n}\n\nclass practiceCode extends Component {\n    render(){\n        return (\n            <div>\n                <div className='code'>\n                    <label className='questionText'>\n                        Two Number Subm\n\n                        Write a function that takes in a non-empty array of distinct integers and an integer representing a target sum. \n                        If any two numbers in the input array sum up to the target sum, the function should return them in an array. \n                        If no two numbers sum up to the target sum, the function should return an empty array. \n                        Assume that there will be at most one pair of numbers summing up to the target sum.\n\n                        Sample input: [3,5,-4,8,11,1,-1,6],10\n                        Sample output: [-1.11]\n                    </label>\n                    <textarea className='codeText'>\n                    </textarea>\n                </div>\n                <div>\n                <button className='submit' >Submit</button>\n                </div>\n            </div>\n            \n          );\n        }\n    }\n  \nexport default practiceCode;"]},"metadata":{},"sourceType":"module"}