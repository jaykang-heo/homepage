{"ast":null,"code":"var _jsxFileName = \"/home/jay/Desktop/homepage/src/practiceCode/code.js\";\nimport React, { Component } from 'react';\nimport './code.css';\nimport path from './question.js';\nimport path1 from './template.js';\nimport path2 from './total.js';\n\nvar assert = require('assert');\n\nfunction getAnswer() {\n  describe('Basic Mocha String Test', function () {\n    it('should return number of charachters in a string', function () {\n      assert.equal(\"Hello\".length, 4);\n    });\n    it('should return first charachter of the string', function () {\n      assert.equal(\"Hello\".charAt(0), 'H');\n    });\n  });\n}\n\nvar start = '';\nvar end = '';\nvar code = false;\n\nfunction startCoding() {\n  if (!code) {\n    start = Date.now();\n    document.getElementById('wholeContent').style.visibility = 'visible';\n    document.getElementById('startButton').style.visibility = 'hidden';\n    document.getElementById('startButton').style.display = 'none';\n    code = true;\n  } else if (code) {\n    end = Date.now();\n    document.getElementById('wholeContent').style.visibility = 'hidden';\n    document.getElementById('startButton').style.visibility = 'visible';\n    document.getElementById('startButton').style.display = 'flex';\n    var time = end - start;\n    var result = 'You took ' + parseInt(time / 60) + ' seconds!';\n    document.getElementById('result').textContent = result;\n    code = false;\n  }\n}\n\nvar temp = '';\n\nfunction convertTemplate() {\n  var func = new Function(array, targetSum, document.getElementById('template').value);\n  console.log(func);\n  console.log(func.array);\n}\n\nclass practiceCode extends Component {\n  render() {\n    const question = path;\n    const template = path1;\n    const total = path2;\n    temp = template;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"startButton\",\n      className: \"startButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => startCoding(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Start Coding\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      id: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"wholeContent\",\n      className: \"wholeContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"code\",\n      id: \"code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"questionText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, question), React.createElement(\"textarea\", {\n      id: \"template\",\n      className: \"codeText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, template)), React.createElement(\"div\", {\n      className: \"submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => startCoding(),\n      className: \"submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Finish\"), React.createElement(\"button\", {\n      onClick: () => convertTemplate(),\n      className: \"submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, total))));\n  }\n\n}\n\nexport default practiceCode;","map":{"version":3,"sources":["/home/jay/Desktop/homepage/src/practiceCode/code.js"],"names":["React","Component","path","path1","path2","assert","require","getAnswer","describe","it","equal","length","charAt","start","end","code","startCoding","Date","now","document","getElementById","style","visibility","display","time","result","parseInt","textContent","temp","convertTemplate","func","Function","array","targetSum","value","console","log","practiceCode","render","question","template","total"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './code.css';\nimport path from './question.js'\nimport path1 from './template.js'\nimport path2 from './total.js'\nvar assert = require('assert');\n\nfunction getAnswer(){\n    describe('Basic Mocha String Test', function () {\n        it('should return number of charachters in a string', function () {\n               assert.equal(\"Hello\".length, 4);\n           });\n        it('should return first charachter of the string', function () {\n               assert.equal(\"Hello\".charAt(0), 'H');\n           });\n       });\n}\n\nvar start = ''\nvar end = ''\nvar code = false\nfunction startCoding(){\n    if (!code){\n        start = Date.now()\n        document.getElementById('wholeContent').style.visibility = 'visible'\n        document.getElementById('startButton').style.visibility = 'hidden'\n        document.getElementById('startButton').style.display = 'none'\n        code = true\n    }\n    else if (code){\n        end = Date.now()\n        document.getElementById('wholeContent').style.visibility = 'hidden'\n        document.getElementById('startButton').style.visibility = 'visible'\n        document.getElementById('startButton').style.display = 'flex'\n        var time = end - start\n        var result = 'You took ' + parseInt(time/60) +' seconds!'\n        document.getElementById('result').textContent = result\n        code = false\n    }\n}\n\nvar temp = ''\nfunction convertTemplate(){\n    var func = new Function(array, targetSum, document.getElementById('template').value)\n    console.log(func)\n    console.log(func.array)\n}\n\nclass practiceCode extends Component {\n    render(){\n        const question = path\n        const template = path1\n        const total = path2\n        temp = template\n        return (\n            <div>\n                <div id='startButton' className='startButton'>\n                    <button onClick={()=>startCoding()} >Start Coding</button><br/><br/>\n                    <label id='result'>\n\n                    </label>\n                </div>\n                <div id='wholeContent' className='wholeContent'>\n                    <div className='code' id='code'>\n                        <label className='questionText'>\n                            {question}\n                        </label>\n                        <textarea id='template' className='codeText'>\n                            {template}\n                        </textarea>\n                    </div>\n                    <div className='submit' id='submit'>\n                        <button onClick={()=>startCoding()} className='submit' id='submit'>Finish</button>\n                        <button onClick={()=>convertTemplate()} className='submit' id='submit'>Submit</button>\n                        <label>{total}</label>\n                    </div>\n                </div>\n            </div>\n          );\n        }\n    }\n  \nexport default practiceCode;"]},"metadata":{},"sourceType":"module"}